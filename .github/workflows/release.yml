name: Build and Release Programs

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y cmake build-essential libopenmpi-dev openmpi-bin

      - name: Configure CMake
        run: cmake -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build all programs
        run: cmake --build build --target program1 program2 program3 program4 program5 program6 program7 program8 program9 program10

      - name: Upload Linux Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-binaries
          path: |
            build/program1
            build/program2
            build/program3
            build/program4
            build/program5
            build/program6
            build/program7
            build/program8
            build/program9
            build/program10

      - name: Prepare release assets
        run: |
          mkdir release-linux
          cp build/program* release-linux/

      - name: Upload Release Asset (Linux)
        uses: softprops/action-gh-release@v2
        with:
          files: release-linux/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure CMake
        run: cmake -B build -DCMAKE_BUILD_TYPE=Release

      - name: Install MS-MPI
        run: choco install msmpi

      - name: Build all programs
        run: cmake --build build --config Release --target program1 program2 program3 program4 program5 program6 program7 program8 program9 program10

      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-binaries
          path: |
            build/Release/program1.exe
            build/Release/program2.exe
            build/Release/program3.exe
            build/Release/program4.exe
            build/Release/program5.exe
            build/Release/program6.exe
            build/Release/program7.exe
            build/Release/program8.exe
            build/Release/program9.exe
            build/Release/program10.exe

      - name: Prepare release assets
        run: |
          mkdir release-windows
          cp build/Release/program*.exe release-windows/

      - name: Upload Release Asset (Windows)
        uses: softprops/action-gh-release@v2
        with:
          files: release-windows/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
